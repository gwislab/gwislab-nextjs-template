// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum EUserRole {
  ADMIN
  CLIENT
}

enum EUserGender {
  MALE
  FEMALE
}

enum ESignUpMethod {
  APP
  GOOGLE
  FACEBOOK
}

enum ELocale {
  EN
  FR
}

model User {
  id          String  @id @default(uuid())
  email       String  @unique
  name        String? @map("name")
  firstName   String? @map("first_name")
  lastName    String? @map("last_name")
  password    String
  phoneNumber String? @unique @map("phone_number")
  address     String?
  country     String?
  state       String?
  zip         String?
  profileUrl  String? @map("profile_url")

  locale       ELocale       @default(EN)
  signupMethod ESignUpMethod @default(APP) @map("signup_method")
  gender       EUserGender?
  userRole     EUserRole     @default(CLIENT) @map("user_role")

  isEmailVerified       Boolean @default(false) @map("email_verified")
  isAccountSetup        Boolean @default(false) @map("is_account_setup")
  isPhoneNumberVerified Boolean @default(false) @map("is_phone_number_verified")
  isTermsAgreed         Boolean @default(false) @map("is_terms_agreed")

  createdAt                   DateTime                      @default(now()) @map("created_at")
  updatedAt                   DateTime                      @updatedAt @map("updated_at")
  deletedAt                   DateTime?
  DoormotQuestionUserResponse DoormotQuestionUserResponse[]

  @@map("user")
}

model ServerDocument {
  id           String  @id @default(uuid())
  name         String?
  url          String?
  size         Int?
  type         String?
  fullPath     String? @map("full_path")
  destination  String?
  originalName String? @map("original_name")
  isPublic     Boolean @default(false) @map("is_public")

  reference String?

  extraData Json? @default("{}") @map("extra_data")

  createdBy String?  @map("created_by")
  updatedBy String?  @map("updated_by")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  deletedAt DateTime? @map("deleted_at")

  @@map("server_document")
}

model DoormotQuestion {
  id        String @id @default(uuid())
  textEn    String
  textFr    String
  extraData Json?  @default("{}") @map("extra_data")

  createdBy String?  @map("created_by")
  updatedBy String?  @map("updated_by")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  deletedAt                   DateTime?                     @map("deleted_at")
  DoormotQuestionUserResponse DoormotQuestionUserResponse[]

  @@unique([textEn, textFr])
  @@map("doormot_question")
}

model DoormotQuestionUserResponse {
  id                String  @id @default(uuid())
  text              String?
  extraData         Json?   @default("{}") @map("extra_data")
  userId            String  @map("user_id")
  doormotQuestionId String  @map("doormot_question_id")

  doormotQuestion DoormotQuestion @relation(fields: [doormotQuestionId], references: [id])
  user            User            @relation(fields: [userId], references: [id])
  createdBy       String?         @map("created_by")
  updatedBy       String?         @map("updated_by")
  createdAt       DateTime        @default(now()) @map("created_at")
  updatedAt       DateTime        @updatedAt @map("updated_at")

  deletedAt DateTime? @map("deleted_at")

  @@map("doormot_question_user_response")
}
